# # Template for Deploy stage

parameters:
- name: DomainName
  default: ''
- name: ServerName
  default: ''
- name: EnvironmentID
  default: ''
- name: EnvironmentName
  default: ''
- name: DatastageProject
  default: ''
- name: ProjectCacheDir
  default: ''
- name: IISUsername
  default: ''
- name: IISPassword
  default: ''
- name: MCIUsername
  default: ''
- name: MCIPassword
  default: ''
- name: PublishCompilationTests
  type: boolean
  default: false

jobs:
  #- deployment: ${{ parameters.EnvironmentID }}
  - deployment: ci
    displayName: Deploy to ${{ parameters.EnvironmentName }}
    pool: 'default'
    environment: ${{ parameters.EnvironmentName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          #- script: export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/opt/IBM/InformationServer/Server/DSEngine/bin
          #  displayName: 'Export PATH'
          - script: source /opt/IBM/InformationServer/Server/DSEngine/dsenv 
            displayName: 'source env'  
          - script: whoami
            displayName: 'user name'
          - script: hostname
            displayName: 'host name'
          - script:
              mettleci datastage create-project -domain ${{ parameters.DomainName }} -username ${{ parameters.IISUsername }} -password ${{ parameters.IISPassword }} -server ${{ parameters.ServerName }} -project ${{ parameters.DatastageProject }}
            displayName: 'Create Project'
          - script:
              mettleci properties config -baseDir datastage -filePattern "*.sh" -filePattern "DSParams" -filePattern "Parameter Sets/*/*" -properties var.${{ parameters.EnvironmentID }} -outDir config
            displayName: 'Configure Properties'
          - script:
              mettleci remote upload -host ${{ parameters.ServerName }} -source "." -destination ${{ parameters.DatastageProject }} -transferPattern "filesystem/**/*,config/*" -username ${{ parameters.MCIUsername }} -password ${{ parameters.MCIPassword }}
            displayName: 'Upload config files'
          - script:
              mettleci remote execute -host ${{ parameters.ServerName }} -username ${{ parameters.MCIUsername }} -password ${{ parameters.MCIPassword }} -script config/deploy.sh
            displayName: 'Execute deploy script'
          - script:
              mettleci datastage deploy -domain ${{ parameters.DomainName }} -server ${{ parameters.ServerName }} -username ${{ parameters.IISUsername }} -password ${{ parameters.IISPassword }} -project ${{ parameters.DatastageProject }} -project-cache ${{ parameters.ProjectCacheDir }} -assets Jobs -threads 8 -include-job-in-test-name
            displayName: 'Deploy DataStage assets'
          - script:
              mettleci remote execute -host ${{ parameters.ServerName }} -username ${{ parameters.MCIUsername }} -password ${{ parameters.MCIPassword }} -script config/cleanup.sh
            displayName: 'Cleanup'
          - ${{ if eq(parameters.publishCompilationTests, true) }}:
            - task: PublishTestResults@2
              condition: always()
              inputs:
                testRunTitle: 'DataStage Compilation'
                testRunner: 'JUnit'
                testResultsFiles: 'log/**/mettleci_compilation.xml'
                searchFolder: $(System.DefaultWorkingDirectory)
                failTaskOnFailedTests: true
              displayName: 'Publish compilation results'
